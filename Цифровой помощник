import speech_recognition as sr
import pyttsx3
import datetime
import re
import random
import webbrowser
import subprocess
from googletrans import Translator
import threading

# Инициализация синтезатора речи и переводчика
engine = pyttsx3.init()
voices = engine.getProperty('voices')
for voice in voices:
    if "Russian" in voice.name:
        engine.setProperty('voice', voice.id)
        break

translator = Translator()

jokes = [
    "Почему программисты не любят природу? Потому что в ней слишком много багов.",
    "Какой язык программирования самый оптимистичный? Python, потому что он всегда говорит: 'Я могу это сделать!'",
    "Почему у компьютера плохое настроение? Потому что у него много вирусов.",
    "Какой самый оптимистичный цвет? Синий, потому что он всегда в 'синем' настроении!",
    "Почему коты не любят интернет? Потому что они не могут поймать мышь!"
]

def speak(text):
    engine.say(text)
    engine.runAndWait()

def listen():
    recognizer = sr.Recognizer()
    with sr.Microphone() as source:
        print("Слушаю...")
        audio = recognizer.listen(source)
        try:
            command = recognizer.recognize_google(audio, language='ru-RU')
            print(f"Вы сказали: {command}")
            return command.lower()
        except sr.UnknownValueError:
            print("Не удалось распознать речь")
            return ""
        except sr.RequestError:
            print("Ошибка сервиса распознавания")
            return ""

def get_current_time():
    now = datetime.datetime.now()
    return now.strftime("%H:%M:%S")

def get_current_date():
    now = datetime.datetime.now()
    return now.strftime("%Y-%m-%d")

def calculate(expression):
    try:
        expression = re.sub(r'[^0-9+\-*/().]', '', expression)
        result = eval(expression)
        return str(result)
    except Exception:
        return "Ошибка в вычислении"

def greet_user(name=None):
    greetings = [
        "Доброе утро!",
        "Добрый день!",
        "Добрый вечер!",
        "Приветствую вас!",
        "Здравствуйте!",
        "Рад вас видеть!",
        "Как приятно вас слышать!"
    ]
    now = datetime.datetime.now()
    hour = now.hour
    if 5 <= hour < 12:
        greeting = greetings[0]  # Доброе утро!
    elif 12 <= hour < 18:
        greeting = greetings[1]  # Добрый день!
    elif 18 <= hour < 23:
        greeting = greetings[2]  # Добрый вечер!
    else:
        greeting = greetings[4]  # Здравствуйте! (ночь и раннее утро)
    if name:
        greeting += f" {name}!"
    else:
        greeting += "!"
    speak(greeting)

def ask_for_name():
    speak("Как вас зовут?")
    name = listen()
    return name if name else None

def search_for_video_on_youtube(query):
    if not query.strip():
        return
    url = f"https://www.youtube.com/results?search_query={query}"
    webbrowser.open(url)

def search_in_yandex(query):
    if not query.strip():
        return
    url = f"https://yandex.ru/search/?text={query}"
    webbrowser.open(url)

def search_in_google(query):
    if not query.strip():
        return
    url = f"https://www.google.com/search?q={query}"
    webbrowser.open(url)

def flip_coin():
    return random.choice(["орел", "решка"])

def translate_text(text, dest_language):
    valid_languages = ['en', 'ru', 'zh-cn', 'zh-tw', 'fr', 'de', 'es']
    if dest_language not in valid_languages:
        return "Извините, я не поддерживаю этот язык."
    try:
        translated = translator.translate(text, dest=dest_language)
        return translated.text
    except Exception:
        return "Ошибка при переводе."

def launch_calculator():
    try:
        subprocess.Popen(['calc.exe'])
        speak("Калькулятор открыт.")
    except Exception:
        speak("Не удалось запустить калькулятор.")

def launch_notepad():
    try:
        subprocess.Popen(['notepad.exe'])
        speak("Блокнот открыт.")
    except Exception:
        speak("Не удалось запустить блокнот.")

def launch_browser():
    try:
        webbrowser.open_new_tab('http://www.google.com')
        speak("Браузер открыт.")
    except Exception:
        speak("Не удалось запустить браузер.")

def search_for_joke():
    joke = random.choice(jokes)
    speak(joke)

def deactivate_after_delay(seconds):
    threading.Timer(seconds, deactivate).start()

def deactivate():
    global active
    active = False
    speak("Микрофон отключен. Скажите «включись», чтобы снова услышать меня.")

def activate():
    global active
    active = True
    speak("Микрофон включен. Говорите!")

def main():
    global active
    active = True
    name = ask_for_name()
    greet_user(name)
    speak("Привет, я Пикси, ваш цифровой помощник. Как я могу помочь вам?")
    while True:
        command = listen()
        if not active:
            if "включись" in command:
                activate()
            continue
        if "привет" in command:
            speak(f"Привет, {name}! Как твои дела?")
            # Ожидаем ответ на приветствие
            response = listen()
            if any(word in response for word in ["хорошо", "отлично", "нормально", "прекрасно"]):
                speak("Рад это слышать!")
            elif any(word in response for word in ["плохо", "ужасно", "не очень"]):
                speak("Очень жаль. Надеюсь, всё скоро наладится.")
            else:
                speak("Спасибо за ответ!")
        elif "время" in command:
            speak(f"Текущее время: {get_current_time()}.")
        elif "дата" in command:
            speak(f"Сегодня: {get_current_date()}.")
        elif "выход" in command or "до свидания" in command:
            speak("До свидания!")
            break
        elif "поиск в гугле" in command:
            query = command.split("поиск в гугле")[-1].strip()
            search_in_google(query)
        elif "поиск в яндексе" in command:
            query = command.split("поиск в яндексе")[-1].strip()
            search_in_yandex(query)
        elif "поиск на ютюбе" in command:
            query = command.split("поиск на ютюбе")[-1].strip()
            search_for_video_on_youtube(query)
        elif "подбрось монетку" in command:
            speak(f"Выпала сторона: {flip_coin()}.")
        elif "расскажи анекдот" in command:
            search_for_joke()
        elif "переведи на русский" in command:
            text = command.split("переведи на русский")[-1].strip()
            result = translate_text(text, 'ru')
            speak(result)
        elif "переведи на китайский" in command:
            text = command.split("переведи на китайский")[-1].strip()
            result = translate_text(text, 'zh-cn')
            speak(result)
        elif "переведи на английский" in command:
            text = command.split("переведи на английский")[-1].strip()
            result = translate_text(text, 'en')
            speak(result)
        elif "запусти калькулятор" in command:
            launch_calculator()
        elif "открой блокнот" in command:
            launch_notepad()
        elif "открой браузер" in command:
            launch_browser()
        elif "вычисли" in command:
            expr = command.split("вычисли")[-1].strip()
            result = calculate(expr)
            speak(result)
        elif "отключи микрофон" in command:
            deactivate()
        else:
            speak("Извините, я не поняла вашу команду.")

if __name__ == "__main__":
    main()
